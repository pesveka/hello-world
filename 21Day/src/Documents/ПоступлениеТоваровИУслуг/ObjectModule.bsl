
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр Взаиморасчеты Расход
	Движения.Взаиморасчеты.Записывать = Истина;
	Движение = Движения.Взаиморасчеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Контрагент = Поставщик;
	Движение.Сумма = СуммаДокумента;

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.СебестоимостьТоваров.Записывать = Истина;
	
//////////////////
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Сумма) КАК Сумма,
		|	СУММА(ПоступлениеТоваровИУслугТовары.Количество) КАК Количество
		|ИЗ
		|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровИУслугТовары.Товар
		|ИТОГИ
		|	СУММА(Сумма),
		|	СУММА(Количество)
		|ПО
		|	Товар";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТовар = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
	    //// регистр СебестоимостьТоваров Приход
		Движение = Движения.СебестоимостьТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаТовар.Товар;
		Движение.Сумма = ВыборкаТовар.Сумма;
		Движение.Количество = ВыборкаТовар.Количество;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


/////////////////

	
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		// регистр ТоварыНаСкладах Приход
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Товар;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовары.Количество;

		//// регистр СебестоимостьТоваров Приход
		//Движение = Движения.СебестоимостьТоваров.Добавить();
		//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		//Движение.Период = Дата;
		//Движение.Номенклатура = ТекСтрокаТовары.Товар;
		//Движение.Сумма = ТекСтрокаТовары.Сумма;
		//Движение.Количество = ТекСтрокаТовары.Количество;
	
		
	КонецЦикла;

	// регистр РегистрБухУчет 
	Движения.РегистрБухУчет.Записывать = Истина;
	Движение = Движения.РегистрБухУчет.Добавить();
	Движение.СчетДт = ПланыСчетов.БухгалтерскийУчет.Товары;
	Движение.СчетКт = ПланыСчетов.БухгалтерскийУчет.Поставщики;
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движения.Взаиморасчеты.Записать();

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Товары.Итог("Сумма");
	
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
ТаблицаТовары = Новый ТаблицаЗначений;

ТаблицаТовары = Товары.Выгрузить();
ТаблицаТовары.Колонки.Добавить("Частота");
ТаблицаТовары.ЗаполнитьЗначения(1, "Частота" );
	
ТаблицаТовары.Свернуть("Товар", "Частота" );
ТаблицаТовары.Сортировать("Частота Убыв");

Для каждого Строка  Из ТаблицаТовары Цикл
     Если Строка.Частота > 1 Тогда
	 
	 	Отказ = Истина;
		//Возврат;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Имеются дубли " + Строка.Товар;
		Сообщение.Поле = "Товары[1].Товар";
		//Сообщение.УстановитьДанные();
		Сообщение.ПутьКДанным = "Объект"; 
		Сообщение.КлючДанных = ЭтотОбъект.Ссылка;
		Сообщение.Сообщить();
	Иначе 
		Прервать;
	   
		//Возврат;
	 КонецЕсли; 
	

КонецЦикла; 

	
	Если Не Отказ И Проведен и Ссылка.Проведен Тогда 
		   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Товар КАК Товар,
		|	Товары.Цена КАК НоваяЦена
		|ПОМЕСТИТЬ ВТНовоеСостояние
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровИУслугТовары.Товар КАК Товар,
		|	ПоступлениеТоваровИУслугТовары.Цена КАК СтараяЦена,
		|	ВТНовоеСостояние.НоваяЦена КАК НоваяЦена
		|ИЗ
		|	ВТНовоеСостояние КАК ВТНовоеСостояние
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
		|		ПО ВТНовоеСостояние.Товар = ПоступлениеТоваровИУслугТовары.Товар
		|			И ВТНовоеСостояние.НоваяЦена <> ПоступлениеТоваровИУслугТовары.Цена
		|ГДЕ
		|	ПоступлениеТоваровИУслугТовары.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
		Запрос.УстановитьПараметр("Товары", Товары);
		
		Результат = Запрос.Выполнить();
		
		Если НЕ Результат.Пустой() Тогда
			Изменения = Справочники.ИзменениеЦен.СоздатьЭлемент();
			Изменения.Наименование = Строка(Ссылка);
			Изменения.Документ = Ссылка;
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				//
				//	 Сообщить(Выборка.Товар) ;
				//	 Сообщить(Выборка.Цена) ;
				//	 Сообщить(Выборка.Цена1) ;
				//	 
				
				//ЗаписьЖурналаРегистрации(
				Строка = Изменения.Изменения.Добавить();
				Строка.НоваяЦена = Выборка.НоваяЦена;
				Строка.СтараяЦена = Выборка.СтараяЦена;    
				Строка.Номенклатура = Выборка.Товар;
			КонецЦикла;
			Изменения.Записать();
			ЗаписьЖурналаРегистрации("Махинации", УровеньЖурналаРегистрации.Предупреждение,Метаданные.Справочники.ИзменениеЦен, Изменения.Ссылка,"Система Аудита Цен", РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
			
		КонецЕсли;
		
		
	КонецЕсли;	
	
КонецПроцедуры






