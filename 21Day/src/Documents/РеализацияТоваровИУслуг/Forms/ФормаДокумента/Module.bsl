
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеТовары.Сумма = ТекущиеДанныеТовары.Количество * ТекущиеДанныеТовары.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеТовары.Сумма = ТекущиеДанныеТовары.Количество * ТекущиеДанныеТовары.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Вставить содержимое обработчика
	Если ИмяСобытия = "ТестНажали"	Тогда
		 КомментарийОповещения = Параметр;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Вставить содержимое обработчика
	//Объект
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//Вставить содержимое обработчика
	 ДокОбъект = РеквизитФормыВЗначение("Объект");
КонецПроцедуры



&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПарамаетрыФО = Новый Структура ("Контрагент", Объект.Клиент);
	УстановитьПараметрыФункциональныхОпцийФормы(   ПарамаетрыФО) ;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Вставить содержимое обработчика
	ПарамаетрыФО = Новый Структура ("Контрагент", Объект.Клиент);
	УстановитьПараметрыФункциональныхОпцийФормы(   ПарамаетрыФО) ;

КонецПроцедуры
